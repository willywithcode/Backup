/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/customer/order_history.js":
/*!************************************************!*\
  !*** ./resources/js/customer/order_history.js ***!
  \************************************************/
/***/ (() => {

eval("$.ajaxSetup({\n  headers: {\n    'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n  }\n});\n$('.cancel-btn').click(function (e) {\n  var url = $(e.target).data('url');\n  var id = $(e.target).data('id');\n  Swal.fire({\n    title: 'Bạn có chắc chắn muốn huỷ đơn hàng?',\n    icon: 'warning',\n    buttonsStyling: false,\n    showCancelButton: true,\n    confirmButtonText: 'Xác nhận',\n    cancelButtonText: 'Hủy thao tác',\n    customClass: {\n      confirmButton: \"btn btn-danger\",\n      cancelButton: 'btn btn-light'\n    }\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        type: 'DELETE',\n        url: url,\n        success: function success(data) {\n          window.localStorage.setItem('success', 'Huỷ đơn hàng thành công!');\n          window.location.href = '/order-history';\n        }\n      });\n    }\n  });\n});\n\n// Class definition\nvar KTAppEcommerceSalesListing = function () {\n  // Shared variables\n  var table;\n  var datatable;\n  var flatpickr;\n  var minDate, maxDate;\n\n  // Private functions\n  var initDatatable = function initDatatable() {\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      'pageLength': 10,\n      'columnDefs': [{\n        orderable: false,\n        targets: 6\n      } // Disable ordering on column 7 (actions)\n      ]\n    });\n\n    // Re-init functions on datatable re-draws\n    datatable.on('draw', function () {\n      handleDeleteRows();\n    });\n  };\n\n  // Init flatpickr --- more info :https://flatpickr.js.org/getting-started/\n  var initFlatpickr = function initFlatpickr() {\n    var element = document.querySelector('#kt_ecommerce_sales_flatpickr');\n    flatpickr = $(element).flatpickr({\n      altInput: true,\n      altFormat: \"d/m/Y\",\n      dateFormat: \"Y-m-d\",\n      mode: \"range\",\n      onChange: function onChange(selectedDates, dateStr, instance) {\n        handleFlatpickr(selectedDates, dateStr, instance);\n      }\n    });\n  };\n\n  // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n  var handleSearchDatatable = function handleSearchDatatable() {\n    var filterSearch = document.querySelector('[data-kt-ecommerce-order-filter=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      datatable.search(e.target.value).draw();\n    });\n  };\n\n  // Handle status filter dropdown\n  var handleStatusFilter = function handleStatusFilter() {\n    var filterStatus = document.querySelector('[data-kt-ecommerce-order-filter=\"status\"]');\n    $(filterStatus).on('change', function (e) {\n      var value = e.target.value;\n      if (value === 'all') {\n        value = '';\n      }\n      datatable.column(1).search(value).draw();\n    });\n  };\n\n  // Handle flatpickr --- more info: https://flatpickr.js.org/events/\n  var handleFlatpickr = function handleFlatpickr(selectedDates, dateStr, instance) {\n    minDate = selectedDates[0] ? new Date(selectedDates[0]) : null;\n    maxDate = selectedDates[1] ? new Date(selectedDates[1]) : null;\n\n    // Datatable date filter --- more info: https://datatables.net/extensions/datetime/examples/integration/datatables.html\n    // Custom filtering function which will search data in column four between two values\n    $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {\n      var min = minDate;\n      var max = maxDate;\n      var dateAdded = new Date(moment($(data[3]).text(), 'DD/MM/YYYY'));\n      if (min === null && max === null || min === null && max >= dateAdded || min <= dateAdded && max === null || min <= dateAdded && max >= dateAdded) {\n        return true;\n      }\n      return false;\n    });\n    datatable.draw();\n  };\n\n  // Handle clear flatpickr\n  var handleClearFlatpickr = function handleClearFlatpickr() {\n    var clearButton = document.querySelector('#kt_ecommerce_sales_flatpickr_clear');\n    clearButton.addEventListener('click', function (e) {\n      flatpickr.clear();\n    });\n  };\n\n  // Delete cateogry\n  var handleDeleteRows = function handleDeleteRows() {\n    // Select all delete buttons\n    var deleteButtons = table.querySelectorAll('[data-kt-ecommerce-order-filter=\"delete_row\"]');\n    deleteButtons.forEach(function (d) {\n      // Delete button on click\n      d.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        // Select parent row\n        var parent = e.target.closest('tr');\n\n        // Get category name\n        var orderID = parent.querySelector('[data-kt-ecommerce-order-filter=\"order_id\"]').innerText;\n\n        // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n        Swal.fire({\n          text: \"Are you sure you want to delete order: \" + orderID + \"?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          buttonsStyling: false,\n          confirmButtonText: \"Yes, delete!\",\n          cancelButtonText: \"No, cancel\",\n          customClass: {\n            confirmButton: \"btn fw-bold btn-danger\",\n            cancelButton: \"btn fw-bold btn-active-light-primary\"\n          }\n        }).then(function (result) {\n          if (result.value) {\n            Swal.fire({\n              text: \"You have deleted \" + orderID + \"!.\",\n              icon: \"success\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            }).then(function () {\n              // Remove current row\n              datatable.row($(parent)).remove().draw();\n            });\n          } else if (result.dismiss === 'cancel') {\n            Swal.fire({\n              text: orderID + \" was not deleted.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            });\n          }\n        });\n      });\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_ecommerce_sales_table');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      initFlatpickr();\n      handleSearchDatatable();\n      handleStatusFilter();\n      handleDeleteRows();\n      handleClearFlatpickr();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceSalesListing.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/customer/order_history.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/customer/order_history.js"]();
/******/ 	
/******/ })()
;