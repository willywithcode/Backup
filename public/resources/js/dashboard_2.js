/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/dashboard_2.js":
/*!*************************************!*\
  !*** ./resources/js/dashboard_2.js ***!
  \*************************************/
/***/ ((module) => {

eval("// Class definition\nvar KTTablesWidget4 = function () {\n  var table;\n  var datatable;\n  var template;\n\n  // Private methods\n  var initDatatable = function initDatatable() {\n    // Get subtable template\n    var subtable = document.querySelector('[data-kt-table-widget-4=\"subtable_template\"]');\n    template = subtable.cloneNode(true);\n    template.classList.remove('d-none');\n\n    // Remove subtable template\n    subtable.parentNode.removeChild(subtable);\n\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      \"lengthChange\": false,\n      'pageLength': 6,\n      'ordering': false,\n      'paging': false,\n      'columnDefs': [{\n        orderable: false,\n        targets: 0\n      },\n      // Disable ordering on column 0 (checkbox)\n      {\n        orderable: false,\n        targets: 6\n      } // Disable ordering on column 6 (actions)\n      ]\n    });\n\n    // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n    datatable.on('draw', function () {\n      resetSubtable();\n      handleActionButton();\n    });\n  };\n\n  // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n  var handleSearchDatatable = function handleSearchDatatable() {\n    var filterSearch = document.querySelector('[data-kt-table-widget-4=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      datatable.search(e.target.value).draw();\n    });\n  };\n\n  // Handle status filter\n  var handleStatusFilter = function handleStatusFilter() {\n    var select = document.querySelector('[data-kt-table-widget-4=\"filter_status\"]');\n    $(select).on('select2:select', function (e) {\n      var value = $(this).val();\n      if (value === 'Show All') {\n        datatable.search('').draw();\n      } else {\n        datatable.search(value).draw();\n      }\n    });\n  };\n\n  // Subtable data sample\n  var data = [{\n    image: '76',\n    name: 'Go Pro 8',\n    description: 'Latest  version of Go Pro.',\n    cost: '500.00',\n    qty: '1',\n    total: '500.00',\n    stock: '12'\n  }, {\n    image: '60',\n    name: 'Bose Earbuds',\n    description: 'Top quality earbuds from Bose.',\n    cost: '300.00',\n    qty: '1',\n    total: '300.00',\n    stock: '8'\n  }, {\n    image: '211',\n    name: 'Dry-fit Sports T-shirt',\n    description: 'Comfortable sportswear.',\n    cost: '89.00',\n    qty: '1',\n    total: '89.00',\n    stock: '18'\n  }, {\n    image: '21',\n    name: 'Apple Airpod 3',\n    description: 'Apple\\'s latest earbuds.',\n    cost: '200.00',\n    qty: '2',\n    total: '400.00',\n    stock: '32'\n  }, {\n    image: '83',\n    name: 'Nike Pumps',\n    description: 'Apple\\'s latest headphones.',\n    cost: '200.00',\n    qty: '1',\n    total: '200.00',\n    stock: '8'\n  }];\n\n  // Handle action button\n  var handleActionButton = function handleActionButton() {\n    var buttons = document.querySelectorAll('[data-kt-table-widget-4=\"expand_row\"]');\n\n    // Sample row items counter --- for demo purpose only, remove this variable in your project\n    var rowItems = [3, 1, 3, 1, 2, 1];\n    buttons.forEach(function (button, index) {\n      button.addEventListener('click', function (e) {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        var row = button.closest('tr');\n        var rowClasses = ['isOpen', 'border-bottom-0'];\n\n        // Get total number of items to generate --- for demo purpose only, remove this code snippet in your project\n        var demoData = [];\n        for (var j = 0; j < rowItems[index]; j++) {\n          demoData.push(data[j]);\n        }\n        // End of generating demo data\n\n        // Handle subtable expanded state\n        if (row.classList.contains('isOpen')) {\n          var _row$classList;\n          // Remove all subtables from current order row\n          while (row.nextSibling && row.nextSibling.getAttribute('data-kt-table-widget-4') === 'subtable_template') {\n            row.nextSibling.parentNode.removeChild(row.nextSibling);\n          }\n          (_row$classList = row.classList).remove.apply(_row$classList, rowClasses);\n          button.classList.remove('active');\n        } else {\n          var _row$classList2;\n          populateTemplate(demoData, row);\n          (_row$classList2 = row.classList).add.apply(_row$classList2, rowClasses);\n          button.classList.add('active');\n        }\n      });\n    });\n  };\n\n  // Populate template with content/data -- content/data can be replaced with relevant data from database or API\n  var populateTemplate = function populateTemplate(data, target) {\n    data.forEach(function (d, index) {\n      // Clone template node\n      var newTemplate = template.cloneNode(true);\n\n      // Stock badges\n      var lowStock = \"<div class=\\\"badge badge-light-warning\\\">Low Stock</div>\";\n      var inStock = \"<div class=\\\"badge badge-light-success\\\">In Stock</div>\";\n\n      // Select data elements\n      var image = newTemplate.querySelector('[data-kt-table-widget-4=\"template_image\"]');\n      var name = newTemplate.querySelector('[data-kt-table-widget-4=\"template_name\"]');\n      var description = newTemplate.querySelector('[data-kt-table-widget-4=\"template_description\"]');\n      var cost = newTemplate.querySelector('[data-kt-table-widget-4=\"template_cost\"]');\n      var qty = newTemplate.querySelector('[data-kt-table-widget-4=\"template_qty\"]');\n      var total = newTemplate.querySelector('[data-kt-table-widget-4=\"template_total\"]');\n      var stock = newTemplate.querySelector('[data-kt-table-widget-4=\"template_stock\"]');\n\n      // Populate elements with data\n      var imageSrc = image.getAttribute('src');\n      image.setAttribute('src', imageSrc + d.image + '.gif');\n      name.innerText = d.name;\n      description.innerText = d.description;\n      cost.innerText = d.cost;\n      qty.innerText = d.qty;\n      total.innerText = d.total;\n      if (d.stock > 10) {\n        stock.innerHTML = inStock;\n      } else {\n        stock.innerHTML = lowStock;\n      }\n\n      // New template border controller\n      // When only 1 row is available\n      if (data.length === 1) {\n        //let borderClasses = ['rounded', 'rounded-end-0'];\n        //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n        //borderClasses = ['rounded', 'rounded-start-0'];\n        //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n        // Remove bottom border\n        //newTemplate.classList.add('border-bottom-0');\n      } else {\n        // When multiple rows detected\n        if (index === data.length - 1) {// first row\n          //let borderClasses = ['rounded-start', 'rounded-bottom-0'];\n          // newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n          //borderClasses = ['rounded-end', 'rounded-bottom-0'];\n          //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n        }\n        if (index === 0) {// last row\n          //let borderClasses = ['rounded-start', 'rounded-top-0'];\n          //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n          //borderClasses = ['rounded-end', 'rounded-top-0'];\n          //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n          // Remove bottom border on last row\n          //newTemplate.classList.add('border-bottom-0');\n        }\n      }\n\n      // Insert new template into table\n      var tbody = table.querySelector('tbody');\n      tbody.insertBefore(newTemplate, target.nextSibling);\n    });\n  };\n\n  // Reset subtable\n  var resetSubtable = function resetSubtable() {\n    var subtables = document.querySelectorAll('[data-kt-table-widget-4=\"subtable_template\"]');\n    subtables.forEach(function (st) {\n      st.parentNode.removeChild(st);\n    });\n    var rows = table.querySelectorAll('tbody tr');\n    rows.forEach(function (r) {\n      r.classList.remove('isOpen');\n      if (r.querySelector('[data-kt-table-widget-4=\"expand_row\"]')) {\n        r.querySelector('[data-kt-table-widget-4=\"expand_row\"]').classList.remove('active');\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_table_widget_4_table');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      handleSearchDatatable();\n      handleStatusFilter();\n      handleActionButton();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTTablesWidget4;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTTablesWidget4.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/dashboard_2.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/dashboard_2.js");
/******/ 	
/******/ })()
;