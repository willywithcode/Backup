/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/order/index.js":
/*!*************************************!*\
  !*** ./resources/js/order/index.js ***!
  \*************************************/
/***/ (() => {

eval("var urlParams = new URLSearchParams(window.location.search);\nvar from = urlParams.get('from');\nvar to = urlParams.get('to');\nvar keywordFilter = urlParams.get('keyword');\nvar statusFilter = urlParams.get('status');\nvar totalFilter = urlParams.get('total');\nif (keywordFilter) {\n  $('.keyword-filter').val(keywordFilter);\n}\nif (statusFilter) {\n  $('.status-filter').val(statusFilter);\n} else {\n  $('.status-filter').val('-1');\n}\nif (totalFilter) {\n  $('.total-filter').val(totalFilter);\n} else {\n  $('.total-filter').val('-1');\n}\n$('.status-filter').on('input', function () {\n  var statusValue = $(this).val();\n  if (statusValue && statusValue !== '-1') {\n    urlParams[\"delete\"]('status');\n    urlParams.append('status', statusValue);\n    window.location.href = \"/orders?\".concat(urlParams.toString());\n  }\n  if (statusValue === '-1') {\n    urlParams[\"delete\"]('status');\n    window.location.href = \"/orders?\".concat(urlParams.toString());\n  }\n});\n$('.total-filter').on('input', function () {\n  var totalValue = $(this).val();\n  if (totalValue && totalValue !== '-1') {\n    urlParams[\"delete\"]('total');\n    urlParams.append('total', totalValue);\n    window.location.href = \"/orders?\".concat(urlParams.toString());\n  }\n  if (totalValue === '-1') {\n    urlParams[\"delete\"]('total');\n    window.location.href = \"/orders?\".concat(urlParams.toString());\n  }\n});\n$('.keyword-filter').keyup(function (e) {\n  var keyword = $(this).val();\n  urlParams[\"delete\"]('keyword');\n  urlParams.append('keyword', keyword);\n  if (e.which === 13) {\n    window.location.href = \"/orders?\".concat(urlParams.toString());\n  }\n});\n$('.cancel-btn').click(function (e) {\n  var url = $(e.target).data('url');\n  var id = $(e.target).data('id');\n  Swal.fire({\n    title: 'Bạn có chắc chắn muốn huỷ đơn hàng?',\n    icon: 'warning',\n    buttonsStyling: false,\n    showCancelButton: true,\n    confirmButtonText: 'Xác nhận',\n    cancelButtonText: 'Hủy thao tác',\n    customClass: {\n      confirmButton: \"btn btn-danger\",\n      cancelButton: 'btn btn-light'\n    }\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      $.ajax({\n        type: 'DELETE',\n        url: url,\n        success: function success(data) {\n          window.localStorage.setItem('success', 'Huỷ đơn hàng thành công!');\n          window.location.href = '/orders';\n        }\n      });\n    }\n  });\n});\n$('.confirm-btn').click(function (e) {\n  var url = $(e.target).data('url');\n  $.ajax({\n    type: 'PUT',\n    url: url,\n    data: {\n      status: 'confirmed'\n    },\n    success: function success(res) {\n      window.localStorage.setItem('success', 'Xác nhận đơn hàng thành công!');\n      window.location.href = '/orders';\n    }\n  });\n});\n$('.status-select').on('input', function () {\n  var status = $(this).val();\n  var url = $(this).data('url');\n  if (status) {\n    $.ajax({\n      type: 'PUT',\n      url: url,\n      data: {\n        status: status\n      },\n      success: function success(res) {\n        window.localStorage.setItem('success', 'Cập nhật trạng thái đơn hàng thành công!');\n        window.location.href = '/orders';\n      }\n    });\n  }\n});\n\n// Class definition\nvar KTAppEcommerceSalesListing = function () {\n  // Shared variables\n  var table;\n  var datatable;\n  var flatpickr;\n  var minDate, maxDate;\n\n  // Private functions\n  var initDatatable = function initDatatable() {\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      'pageLength': 10,\n      'columnDefs': [{\n        orderable: false,\n        targets: 6\n      } // Disable ordering on column 7 (actions)\n      ]\n    });\n\n    // Re-init functions on datatable re-draws\n    datatable.on('draw', function () {\n      handleDeleteRows();\n    });\n  };\n\n  // Init flatpickr --- more info :https://flatpickr.js.org/getting-started/\n  var initFlatpickr = function initFlatpickr() {\n    var element = document.querySelector('#kt_ecommerce_sales_flatpickr');\n    flatpickr = $(element).flatpickr({\n      altInput: true,\n      altFormat: \"d/m/Y\",\n      dateFormat: \"Y-m-d\",\n      defaultDate: [from, to],\n      locale: {\n        rangeSeparator: ' - '\n      },\n      mode: \"range\",\n      onChange: function onChange(selectedDates, dateStr, instance) {\n        handleFlatpickr(selectedDates, dateStr, instance);\n      }\n    });\n  };\n\n  // Handle flatpickr --- more info: https://flatpickr.js.org/events/\n  var handleFlatpickr = function handleFlatpickr(selectedDates, dateStr, instance) {\n    var _dates$, _dates$2;\n    var dates = dateStr.split(' - ');\n    minDate = (_dates$ = dates[0]) !== null && _dates$ !== void 0 ? _dates$ : null;\n    maxDate = (_dates$2 = dates[1]) !== null && _dates$2 !== void 0 ? _dates$2 : null;\n    if (minDate && maxDate) {\n      urlParams[\"delete\"]('from');\n      urlParams[\"delete\"]('to');\n      urlParams.append('from', minDate);\n      urlParams.append('to', maxDate);\n      window.location.href = \"/orders?\".concat(urlParams.toString());\n    }\n    if (!minDate && !maxDate) {\n      urlParams[\"delete\"]('from');\n      urlParams[\"delete\"]('to');\n      window.location.href = \"/orders?\".concat(urlParams.toString());\n    }\n  };\n\n  // Handle clear flatpickr\n  var handleClearFlatpickr = function handleClearFlatpickr() {\n    var clearButton = document.querySelector('#kt_ecommerce_sales_flatpickr_clear');\n    clearButton.addEventListener('click', function (e) {\n      flatpickr.clear();\n    });\n  };\n\n  // Delete cateogry\n  var handleDeleteRows = function handleDeleteRows() {\n    // Select all delete buttons\n    var deleteButtons = table.querySelectorAll('[data-kt-ecommerce-order-filter=\"delete_row\"]');\n    deleteButtons.forEach(function (d) {\n      // Delete button on click\n      d.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        // Select parent row\n        var parent = e.target.closest('tr');\n\n        // Get category name\n        var orderID = parent.querySelector('[data-kt-ecommerce-order-filter=\"order_id\"]').innerText;\n\n        // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n        Swal.fire({\n          text: \"Are you sure you want to delete order: \" + orderID + \"?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          buttonsStyling: false,\n          confirmButtonText: \"Yes, delete!\",\n          cancelButtonText: \"No, cancel\",\n          customClass: {\n            confirmButton: \"btn fw-bold btn-danger\",\n            cancelButton: \"btn fw-bold btn-active-light-primary\"\n          }\n        }).then(function (result) {\n          if (result.value) {\n            Swal.fire({\n              text: \"You have deleted \" + orderID + \"!.\",\n              icon: \"success\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            }).then(function () {\n              // Remove current row\n              datatable.row($(parent)).remove().draw();\n            });\n          } else if (result.dismiss === 'cancel') {\n            Swal.fire({\n              text: orderID + \" was not deleted.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            });\n          }\n        });\n      });\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_ecommerce_sales_table');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      initFlatpickr();\n      handleDeleteRows();\n      handleClearFlatpickr();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTAppEcommerceSalesListing.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/order/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/order/index.js"]();
/******/ 	
/******/ })()
;